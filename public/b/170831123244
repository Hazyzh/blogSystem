<!DOCTYPE html>
<html>
    <head>
        <meta http-equiv=Content-Type content="text/html;charset=utf-8">
        <meta name="keywords" contect="node博客系统，个人博客">
        <meta name="author" contect="hazyzh">
        <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=0, minimum-scale=1.0, maximum-scale=1.0">
        <title>构建自己的博客</title>
        <link rel="shortcut icon" href="/favicon.ico"  type="image/x-icon">
        <style>
            *{
                margin: 0px;padding: 0px;
            }
            body{
                font: 17px/1.5 "Lucida Grande", "Lucida Sans Unicode", Helvetica, Arial, Verdana, sans-serif;
                background: white;
                margin: 0;
                color: #33333d;
                overflow-y: scroll;
                overflow-x: hidden;
            }
            header{
                height: 70px;
                line-height: 70px;
                overflow: hidden;
                background: #fafafa;
                box-shadow: 0px 2px 10px 0px rgba(0,0,0,0.1), 0 1px rgba(0,0,0,0.1);
                -webkit-box-shadow: 0px 2px 10px 0px rgba(0,0,0,0.1), 0 1px rgba(0,0,0,0.1);
                -moz-box-shadow: 0px 2px 10px 0px rgba(0,0,0,0.1), 0 1px rgba(0,0,0,0.1);
            }
            .header-content .home-logo{
                float: left;
                display: block;
                width: 50px;
                height: 50px;
                border-radius: 50%;
                margin-top: 10px;
                overflow: hidden;
                box-shadow: 1px 1px 1px #171411;
                -webkit-box-shadow: 1px 1px 1px #171411;
                -moz-box-shadow: 1px 1px 1px #171411;
            }
            .header-content .blog-info{
                float: right;
            }
            .header-content .blog-info a{
                color: #999;
                text-decoration: none;
                margin-right: 20px;
            }
            .header-content .blog-info a:hover{
                color: #71afae
            }
            .header-content a img{
                width: 100%;
                height: 100%;
            }

            h1{
                margin: 20px 0px;
            }

            p{
                font-weight: 300;
                letter-spacing: 1px;
                font-family: "Lucida Grande", "Lucida Sans Unicode", Helvetica, Arial, Verdana, sans-serif;
            }
            #content,.header-content{
                width: 1200px;
                margin: auto;
            }
            #content img{
                width: 100%;
            }

            pre{
                background: #eee;
                font-size: 17px;
                padding: 20px 0;
                border-radius: 10px;
                overflow: auto;
                font-weight: 300;
                text-shadow: 0 1px white;
                font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace;
                white-space: pre;
                word-spacing: normal;
                word-break: normal;
                word-wrap: normal;
                line-height: 1.5;
            }
            .info-title{
                display: block;
                margin: 10px;
            }
            .info-title .tags{
                background: #eee;
                padding: 5px;
                border-radius: 3px;
                margin-right: 5px;
                cursor: pointer;
            }
            .info-title .time{
                font-size: 14px;
                color: #999;
            }
            .line{
                display: block;
                width: 100%;
                height: 1px;
                background: #eee;
            }
            /*文章内容*/
            .blog-content{
                width: 800px;
                float: left;
            }
            .blog-aside{
                width: 400px;
                float: right;
            }
            .clearleft{
                clear:both;
                zoom:1;
            }
            .clearleft:after{
                display: table;
                content: "";
                clear: both;
            }
            .count-total{float: right;margin-right: 30px;}
        </style>
        <link rel="stylesheet" href="/styles/ocean.css">
        <link href="https://cdn.bootcss.com/antd/2.12.2/antd.min.css" rel="stylesheet">
        <link href="https://cdn.bootcss.com/animate.css/3.5.2/animate.min.css" rel="stylesheet">
    </head>
    <body>
        <header>
            <div class="header-content">
                <a href="/blog" class="home-logo">
                    <img src="/static/imgs/home.png" />
                </a>
                <div class="blog-info">
                    <a href="/blog">主页</a>
                    <a href="/blog/tags">标签分类</a>
                    <a href="/blog/about">个人中心</a>
                </div>
            </div>
        </header>
        <div id="content">
            <h1>构建自己的博客</h1>
            <span class="info-title clearleft">
                
                    <span class="tags">个人博客</span>
                
                <span class="time">2017年08月31日 12:32:44</span>
                <span class="count-total" id="countNumbers"></span>
            </span>
            <span class="line"></span>
            <div class="blog-container clearleft">
                <article class="blog-content">
                    <h3 id="hazyzh-h3-1">前言</h3><p>自己之前想实践 <code>nodejs</code> 项目，就买了一个百度的 <a href="https://cloud.baidu.com/product/bae.html?track=cp:nsem|pf:pc|pp:bae|pu:brand|ci:|kw:33331">bae</a> 在上面部署我的node项目,自带<code>CICD</code> 感觉还是很方便，服务器什么的都不用管，直接发布了就好了，后来慢慢感觉到很多限制，比如 <code>node</code> 的版本被限制死了，发布出错时候不容易查到原因，想修改一个 <code>npm</code> 包源码内容时候也很难实现。</p>
<p>正好 <a href="https://www.aliyun.com/">阿里云</a> 有个9元建站的活动，就买了一个服务器，自己搭建服务器还是很艰难的，用的 <code>CentOS 6.8</code> ,之前没接触过 <code>linux</code> 搭环境按软件的过程还是很 <strong>酸爽</strong>
的,这里先不提了，搭好之后直接用 <code>node8</code> ,大部分 <code>es6</code> 语法都不用去 <code>babel</code> 转了 感觉很棒。有环境了就想着去折腾</p>
<h3 id="hazyzh-h3-2">博客想法</h3><p>和大部分人一样，想着自己先建一个博客吧。用服务器就是为了实践 <code>nodejs</code>, 所以 <code>WordPress</code> 之类的不会去考虑了，后面有去了解到 <a href="https://hexo.io/">hexo</a> 和 <a href="https://ghost.org/">ghost</a>, 看了看感觉都很棒。自己去实践了一下，搭起来感觉还行，但是要改一些样式配置之类的，要去看很多配置文件的意义，对我个人来说去研究这些配置文件是很心累的事情。</p>
<p>自己做博客就是想静静的展示一些文章,没有什么样式、炫酷特效的要求。后面一想与其去研究配置文件不如自己搞一个简单的算啦。想了一下自己的需求</p>
<ul>
<li>简单，等后面自己折腾不动了还可以保留这些资料 -- (markdown文稿)</li>
<li>清爽，自己设计能力也不强，但是模仿别人也好至少要做的页面看起来简洁一点。</li>
<li>折腾，博客首页可以简单做个展示，详情页里面要添加一些自己想实践的元素，在线交流、用户验证评论、关联展示等..</li>
</ul>
<h3 id="hazyzh-h3-3">思路</h3><p><img src="http://oqqyvkd0p.bkt.clouddn.com/%E5%8D%9A%E5%AE%A2%E6%80%9D%E8%B7%AF.png" alt="思路"></p>
<p>博客核心就是内容页，自己大概思路就是这些，命令生成一个新的 <code>md</code> 文件，其中包含后面需要的配置信息，然后写好内容后在根据内容生成静态html文件放到自己的站点上。对于内容页的样式有过一个大概的规划</p>
<p><img src="http://oqqyvkd0p.bkt.clouddn.com/idea.png" alt="内容页"></p>
<h3 id="hazyzh-h3-4">技术选型</h3><ul>
<li>生成 <code>md</code> 文件时候基本的配置信息 <code>hexo</code> 用的 <code>YAML</code> 写入配置在文章的顶部，自己做图方便直接生成一个 <code>JSON</code> 对象仍在顶部，到后面解析时候直接正则匹配出来。内容信息存储直接用买服务器时候送的 <code>mysql</code> 来存了。</li>
<li>写入文章内容，标题和时间会在配置生成时候写入后面解析也会添加到静态页面中，<code>md</code> 正文中直接写自己要写到内容即可，段落标题后面解析时候只匹配了 <code>h3 -&gt; ###</code> 和 <code>h4 -&gt; ####</code> 标题做为目录信息。</li>
<li>解析文件内容。看了一些 <code>md</code> 解析的库，最后选择用 <a href="https://github.com/chjj/marked">marked</a>,解析时候处了常规配置，语法高亮用了<a href="https://github.com/isagalaev/highlight.js">highlight</a>给代码片段加入语法高亮，自己写了 <code>h 标签</code> 的 render规则，给 <code>h3</code> 和 <code>h4</code> 加了自己的 <code>id</code> 值,后面用来生成目录导航。</li>
<li>附加功能：因为自己熟悉 <code>react</code>， 也想多练习就用 <code>react</code> 写附加功能模块，组件用了 <a href="https://ant.design/index-cn">antd</a> 的一些组建。<ul>
<li>关于导航考虑到后面首页可能还会用这些信息，自己没有在页面上直接写入，而是把信息存在数据库进入页面时候取出来展示。</li>
<li>聊天区域正好后台用的 <code>nodejs</code> 就选择了<a href="https://github.com/socketio/socket.io/">socket.io</a>来接入聊天功能，聊天用户名则是根据登入 <code>ip</code> 地址城市随机生成,定位信息来自 <a href="http://lbs.amap.com/">高德地图</a>。</li>
<li>评论区域，自己把生成的评论存入数据库，评论登入调用了 <a href="http://open.weibo.com/">微博登录授权</a>，授权成功用 <a href="https://jwt.io/">jwt</a> 生成 <code>token</code> 用于后续鉴权，自己的评论可以在一定时间段内删除,增加和删除加入了一些 <a href="https://daneden.github.io/animate.css/">animate.css</a> 的动画。</li>
</ul>
</li>
<li>后台信息数据存储就直接用 <code>nodejs</code> 的 <a href="https://github.com/mysqljs/mysql">mysql</a> 模块，接口交互则用了比较方便的 <a href="http://www.expressjs.com.cn/">express</a></li>
</ul>

                    <div id="comment" class="comment"></div>
                </article>
                <aside class="blog-aside" id="asideContent">
                </aside>
            </div>
        </div>
        <script src="https://cdn.bootcss.com/react/15.6.1/react.min.js"></script>
        <script src="https://cdn.bootcss.com/react/15.6.1/react-dom.min.js"></script>
        <script src="https://cdn.bootcss.com/antd/2.12.2/antd.min.js"></script>
        <script type="text/javascript" src="/js/bundle.js"></script>
    </body>
</html>
